buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

plugins {
    id 'maven'
    id 'maven-publish'
    id 'java'
    id "com.jfrog.bintray" version "1.8.5"
    id 'com.jfrog.artifactory' version '4.18.3'
}

group = 'de.labyhelp.addon' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
version = '2.6'
//archivesBaseName = "LabyHelp"

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'java'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }

            groupId 'de.labyhelp'
            artifactId 'addon'
            version '2.6'
            pom {
                name = 'labyhelp'
                description = 'The offical API for the LabyHelp addon'
                url = 'http://www.labyhelp.de'
                developers {
                    developer {
                        id = 'marvinhuelsmann'
                        name = 'Marvin Huelsmann'
                        url = 'https://marvhuelsmann.de'
                    }
                    developer {
                        id = 'rufusmaiwald'
                        name = 'Rufus Maiwald'
                        url = 'https://rufusmaiwald.de'
                    }
                    developer {
                        id = 'dominklippl'
                        name = 'Dominik Lippl'
                        url = 'https://dominiklippl.de'
                    }
                }
            }
        }
    }
}

bintray {
    user = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
    key = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
    publications = ['mavenPublication']
    pkg {
        repo = 'LabyHelp'
        name = 'LabyHelp'
        userOrg = 'labyhelp'
        licenses = ['GPL-2.0']
        vcsUrl = 'https://github.com/LabyHelp/LabyHelp.git'
        labels = ['library', 'labymod', 'minecraft']
        publicDownloadNumbers = true
        publish = true

        version {
            name = '2.6'
            desc = 'LabyHelp API'
            released = new Date()
            vcsTag = '2.6'
        }
    }
}

// FORGE
apply plugin: 'net.minecraftforge.gradle.forge'

dependencies {
    // apache
    compile 'org.apache.httpcomponents:httpclient:4.5.13'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'

    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'

    testCompileOnly 'org.projectlombok:lombok:1.18.16'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'
}

minecraft {
    version = "1.8.9-11.15.1.1855"
    runDir = "run"
    mappings = "stable_20"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'

jar {
    manifest {
        attributes 'Main-Class': 'de.labyhelp.addon.Main'
    }
}

reobf {
    jar {
        useNotchSrg()
    }
}
